<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQf/9k=
</value>
  </data>
</root>